get파라미터는 종류가 2가지
쿼리스트링, url 폴더

그 다음에 나머지가 post put delete죠?
요번 단원에서는 html페이지를 안만들었어요
대신에 insomnia로 테스트를 할거에요
자 insomnia에서 만들어놓고
전송방식을 POST로 맞추고요
그 다음에 From에서 From URL Encoded라는 항목을 선택을 합니다.
그럼 여기에 내가 보내고싶은 파라미터를 직접 적어서
백엔드 페이지로 전송할 수가 있어요.
여기서
username 헬로월드
email helloworld@naver.com
한 다음에 send를 하면은
백엔드가 그거를 받아서 html로 출력하는 형태의 예제에요
아마 여러분이 만드는 백엔드도 이렇게 인섬니아로 테스트를 할거에요
왜냐면 API하나 하자고 매번 AJAX할 수가 없잖아요
더군다나 put delete방식은 ajax가 아니면 전송방식이 없어요
그러니까 매번 put하고 delete를 짤라면 ajax를 짜야한다는건데 그건 너무 힘들죠
post 자매품 PUT
방식은 똑같아요
delete 도 보낸거죠
자 요걸 처리하는 과정에 대해서 이야기 해볼게요
frontend가 변수값을 보내면 매번 이렇게 로그로 반복문 돌면서 전달받은 변수를 로그로 기록하게 해뒀습니다.
그리고 나중에 저장되어있는 로그파일 확인하면 로그파일 똑같이 적혀있어요
자 그럼 코드 봅시다.


일단 3번 파일은요 스탭이 3개밖에 안돼요
자 첫 번째 스탭에서
POST파라미터를 처리하기 위해서 GET파라미터는 Node가 자체적으로 지원을 하는데 POST PUT DELETE는 지원을 안해요
body-parser/ post
method-override / put
그 다음 expree 객체 추가 설정 부분입니다.
일단 post파라미터 수신 모듈을 설정해요
얘는 가장 먼저 설정해야해요
```
app.use(bodtyParser.urlencoded({ extended: true});

사실 put하고 delete는 post랑 방법이 똑같아요
근데 웃긴게 브라우저 종류에 따라서 요 전송방식이다라는걸 알려주는 헤더 일므이 달라요
헤더 이름을 다르게 다 잡아줘야해요 좀 불편하죠
요 헤더로부터 methodOverride를 보내면 POST방식이랑 똑같이 받아줘요
```
<form method="get/post" action="http://localhost:3001/test">
이렇게 폼 태그를 만들면 이 폼 안에 있는 인풋태그들이 이 백엔드 페이지로 전송이 된단말이에요
근데 전송방식이 get post 두 가지밖에 지원을 안하는데
액션 페이지 주소에
?_method 쿼리스트링을 추가해서 액션변수를 주면
put하고 delete까지 확장을 시켜준단말이에요
별로 쓸만한 기능은 아니에요 put하고 delete까지 들어가면 ajax를 안 쓸 수없으니까...

자 글머 이제 백엔드별 페이지들 만들어야죠
setup.js예제
getParams예제
그 ㄷ마에 이제
POST PUT DELETE 예제
router.post 하면 post에만 반응을 해요
파라미터를 뽑을 땐 req.body.파라미터 이름이에요
그래서 req.body를 뽑아서 반복을 돌렸구요
